name: h1of_envno
# generates dynamic parameters (cutoff, amplitudes) using envelope
# note off position is random
# save envelope params
dag:
  enva:
    config:
      _target_: diffsynth.modules.envelope.ADSREnvelope
      max_value: 1.0
      channels: 1
    connections:
      floor: AMP_FLOOR
      peak: PEAK_A
      attack: AT_A
      decay: DE_A
      sus_level: SU_A
      release: RE_A
      note_off: NOTE_OFF
      noise_mag: NOISE_A
  envc:
    config:
      _target_: diffsynth.modules.envelope.ADSREnvelope
      channels: 1
    connections:
      floor: CUT_FLOOR
      peak: PEAK_C
      attack: AT_C
      decay: DE_C
      sus_level: SU_C
      release: RE_C
      note_off: NOTE_OFF
      noise_mag: NOISE_C
  harmor:
    config:
      _target_: diffsynth.modules.harmor.Harmor
      sample_rate: 16000
      sep_amp: true
      n_oscs: 1
    connections:
      amplitudes: enva
      osc_mix: M_OSC
      f0_hz: BFRQ
      f0_mult: DUMMY
      cutoff: envc
      q: Q_FILT

fixed_params:
  AMP_FLOOR: 0
static_params: [BFRQ, M_OSC, DUMMY, Q_FILT, NOISE_C, NOISE_A, AT_A, DE_A, SU_A, RE_A, AMP_FLOOR, PEAK_A, AT_C, DE_C, SU_C, RE_C, CUT_FLOOR, PEAK_C, NOTE_OFF]
# save note off for only enva (same as envc)
save_params: [enva_peak, enva_attack, enva_decay, enva_sus_level, enva_release, enva_note_off, envc_peak, envc_attack, envc_decay, envc_sus_level, envc_release, harmor_osc_mix, harmor_f0_hz, harmor_q]